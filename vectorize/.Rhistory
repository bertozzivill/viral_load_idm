# meanAIC<-lapply(AIC,rowMeans)
# TODO: get RMSE from OOS file (when my internet lives again)
#get summary coefficients for model outputs (across imputations)
data
index.survival.models
index.survival.models[1,]
####################################################################################################
## Author: Amelia Bertozzi-Villa
## Description: Find summary measures (coefficients, SE, AIC, Rubin error, RMSE[oos]) for all models tested
## Input:  main_dir: Directory in which imputed model data live
##
## Output:
##
## Run from within the "vectorize" folder!
####################################################################################################
rm(list=ls())
library(data.table)
library(ggplot2)
library(lme4)
library(reshape2)
library(Amelia)
source("LinearSurvivalModel.R")
source("rubin.method.R")
source("output.AIC.R")
source("summarize_models.r")
#automatically finds correct directory name so we can stop commenting and uncommenting lines
dir.exists <- function(d) {
de <- file.info(d)$isdir
ifelse(is.na(de), FALSE, de)
}
root_dir <- ifelse(dir.exists("/home/cselinger/"), "/home/cselinger/HIV-Cascade/merge/data/", "C:/Users/abertozz/Dropbox (IDM)/viral_load/cascade/data/")
main_dir <- ifelse(length(commandArgs())>2, commandArgs()[3], root_dir)
#load imputed data and indices for data transforms and survial models
print("loading imputed data")
load(paste0(main_dir, "imputed_survival_data.rdata"))
load(paste0(main_dir, "indexes.rdata"))
#run all models
print ("running survival models")
survival.model.output<-list()
for (k in 1:length(data.for.survival)){
data=data.table(data.for.survival[[k]])
survival.model.output[[k]]<-lapply(1:length(index.survival.models), function(idx){
LinearSurvivalModel(data=data,
spvl_method=index.survival.models[idx,]$spvl_method,
interaction=index.survival.models[idx,]$interaction,
bins=index.survival.models[idx,]$bins,
return.modelobject = 1)
})
names(survival.model.output[[k]]) <- apply(index.survival.models,1,function(x)paste(x, collapse="-"))
}
####################################################################################################
## Author: Amelia Bertozzi-Villa
## Description: Find summary measures (coefficients, SE, AIC, Rubin error, RMSE[oos]) for all models tested
## Input:  main_dir: Directory in which imputed model data live
##
## Output:
##
## Run from within the "vectorize" folder!
####################################################################################################
rm(list=ls())
library(data.table)
library(ggplot2)
library(lme4)
library(reshape2)
library(Amelia)
source("LinearSurvivalModel.R")
source("rubin.method.R")
source("output.AIC.R")
source("summarize_models.r")
#automatically finds correct directory name so we can stop commenting and uncommenting lines
dir.exists <- function(d) {
de <- file.info(d)$isdir
ifelse(is.na(de), FALSE, de)
}
root_dir <- ifelse(dir.exists("/home/cselinger/"), "/home/cselinger/HIV-Cascade/merge/data/", "C:/Users/abertozz/Dropbox (IDM)/viral_load/cascade/data/")
main_dir <- ifelse(length(commandArgs())>2, commandArgs()[3], root_dir)
#load imputed data and indices for data transforms and survial models
print("loading imputed data")
load(paste0(main_dir, "imputed_survival_data.rdata"))
load(paste0(main_dir, "indexes.rdata"))
#run all models
print ("running survival models")
survival.model.output<-list()
for (k in 1:length(data.for.survival)){
data=data.table(data.for.survival[[k]])
survival.model.output[[k]]<-lapply(1:length(index.survival.models), function(idx){
LinearSurvivalModel(data=data,
spvl_method=index.survival.models[idx,]$spvl_method,
interaction=index.survival.models[idx,]$interaction,
bins=index.survival.models[idx,]$bins,
return.modelobject = 1)
})
#names(survival.model.output[[k]]) <- apply(index.survival.models,1,function(x)paste(x, collapse="-"))
}
survival.model.output[1]
length(index.survival.models)
index.survival.models
nrow(index.survival.models)
####################################################################################################
## Author: Amelia Bertozzi-Villa
## Description: Find summary measures (coefficients, SE, AIC, Rubin error, RMSE[oos]) for all models tested
## Input:  main_dir: Directory in which imputed model data live
##
## Output:
##
## Run from within the "vectorize" folder!
####################################################################################################
rm(list=ls())
library(data.table)
library(ggplot2)
library(lme4)
library(reshape2)
library(Amelia)
source("LinearSurvivalModel.R")
source("rubin.method.R")
source("output.AIC.R")
source("summarize_models.r")
#automatically finds correct directory name so we can stop commenting and uncommenting lines
dir.exists <- function(d) {
de <- file.info(d)$isdir
ifelse(is.na(de), FALSE, de)
}
root_dir <- ifelse(dir.exists("/home/cselinger/"), "/home/cselinger/HIV-Cascade/merge/data/", "C:/Users/abertozz/Dropbox (IDM)/viral_load/cascade/data/")
main_dir <- ifelse(length(commandArgs())>2, commandArgs()[3], root_dir)
#load imputed data and indices for data transforms and survial models
print("loading imputed data")
load(paste0(main_dir, "imputed_survival_data.rdata"))
load(paste0(main_dir, "indexes.rdata"))
#run all models
print ("running survival models")
survival.model.output<-list()
for (k in 1:length(data.for.survival)){
data=data.table(data.for.survival[[k]])
survival.model.output[[k]]<-lapply(1:nrow(index.survival.models), function(idx){
LinearSurvivalModel(data=data,
spvl_method=index.survival.models[idx,]$spvl_method,
interaction=index.survival.models[idx,]$interaction,
bins=index.survival.models[idx,]$bins,
return.modelobject = 1)
})
names(survival.model.output[[k]]) <- apply(index.survival.models,1,function(x)paste(x, collapse="-"))
}
survival.model.output[1]
survival.model.output[[1]]
survival.model.output[[1]][[1]]
class(survival.model.output[[1]][[1]])
summary(survival.model.output[[1]][[1]])
is.list(survival.model.output[[1]][[1]])
survival.model.output[[1]][[1]][[1]]
survival.model.output[[1]][[1]]
class(1)
survival.model.output[[1]]
survival.model.output[[1]]$`spvl_model-1-0`
summary(survival.model.output[[1]]$`spvl_model-1-0`)
data.for.survival
matrix()
nrow(data.for.survival)
ncol(data.for.survival)
survival.model.output<-matrix(x=nrow(data.for.survival),
y=ncol(data.for.survival),
dimnames = list(rownames(data.for.survival), colnames(data.for.survival)))
survival.model.output<-matrix(nrow=nrow(data.for.survival),
ncol=ncol(data.for.survival),
dimnames = list(rownames(data.for.survival), colnames(data.for.survival)))
survival.model.output
index.survival.models
survival.model.output<-matrix(nrow=ncol(data.for.survival),
ncol=row(index.survival.models),
dimnames = list(colnames(data.for.survival), apply(index.survival.models,1,function(x)paste(x, collapse="-")))
)
survival.model.output<-matrix(nrow=ncol(data.for.survival),
ncol=nrow(index.survival.models),
dimnames = list(colnames(data.for.survival), apply(index.survival.models,1,function(x)paste(x, collapse="-")))
)
survival.model.output
colnames(data.for.survival)
rownames(data.for.survival)
data.for.survival[rownames(data.for.survival[[1]],colnames(data.for.survival[[1]])]
data.for.survival[rownames(data.for.survival[[1]]),colnames(data.for.survival[[1]])]
data.for.survival[rownames(data.for.survival)[[1]],colnames(data.for.survival)[[1]]]
data.for.survival[1,colnames(data.for.survival)[[1]]]
####################################################################################################
## Author: Amelia Bertozzi-Villa
## Description: Find summary measures (coefficients, SE, AIC, Rubin error, RMSE[oos]) for all models tested
## Input:  main_dir: Directory in which imputed model data live
##
## Output:
##
## Run from within the "vectorize" folder!
####################################################################################################
rm(list=ls())
library(data.table)
library(ggplot2)
library(lme4)
library(reshape2)
library(Amelia)
source("LinearSurvivalModel.R")
source("rubin.method.R")
source("output.AIC.R")
source("summarize_models.r")
#automatically finds correct directory name so we can stop commenting and uncommenting lines
dir.exists <- function(d) {
de <- file.info(d)$isdir
ifelse(is.na(de), FALSE, de)
}
root_dir <- ifelse(dir.exists("/home/cselinger/"), "/home/cselinger/HIV-Cascade/merge/data/", "C:/Users/abertozz/Dropbox (IDM)/viral_load/cascade/data/")
main_dir <- ifelse(length(commandArgs())>2, commandArgs()[3], root_dir)
#load imputed data and indices for data transforms and survial models
print("loading imputed data")
load(paste0(main_dir, "imputed_survival_data.rdata"))
load(paste0(main_dir, "indexes.rdata"))
#run all models
print ("running survival models")
survival.model.output<-matrix(nrow=ncol(data.for.survival),
ncol=nrow(index.survival.models),
dimnames = list(colnames(data.for.survival), apply(index.survival.models,1,function(x)paste(x, collapse="-")))
)
for (model_idx in colnames(survival.model.output)){
model_info <- index.survival.models[model_idx,]
for (transform_idx in colnames(data.for.survival)){
model_imps <- NULL;
for (imputation_idx in 1:nrow(data.for.survival)){
data=data.table(data.for.survival[imputation_idx, transform_idx])
output= LinearSurvivalModel(data=data,
spvl_method=model_info$spvl_method,
interaction=model_info$interaction,
bins=model_info$bins,
return.modelobject = 1)
output_summary <- summary(output)$coefficients
model_imps[[imputation_idx]] <- output_summary
}
survival.model.output[transform_idx, model_idx] <- model_imps
}
}
model_idx
model_info
index.survival.models
####################################################################################################
## Author: Amelia Bertozzi-Villa
## Description: Find summary measures (coefficients, SE, AIC, Rubin error, RMSE[oos]) for all models tested
## Input:  main_dir: Directory in which imputed model data live
##
## Output:
##
## Run from within the "vectorize" folder!
####################################################################################################
rm(list=ls())
library(data.table)
library(ggplot2)
library(lme4)
library(reshape2)
library(Amelia)
source("LinearSurvivalModel.R")
source("rubin.method.R")
source("output.AIC.R")
source("summarize_models.r")
#automatically finds correct directory name so we can stop commenting and uncommenting lines
dir.exists <- function(d) {
de <- file.info(d)$isdir
ifelse(is.na(de), FALSE, de)
}
root_dir <- ifelse(dir.exists("/home/cselinger/"), "/home/cselinger/HIV-Cascade/merge/data/", "C:/Users/abertozz/Dropbox (IDM)/viral_load/cascade/data/")
main_dir <- ifelse(length(commandArgs())>2, commandArgs()[3], root_dir)
#load imputed data and indices for data transforms and survial models
print("loading imputed data")
load(paste0(main_dir, "imputed_survival_data.rdata"))
load(paste0(main_dir, "indexes.rdata"))
#run all models
print ("running survival models")
survival.model.output<-matrix(nrow=ncol(data.for.survival),
ncol=nrow(index.survival.models),
dimnames = list(colnames(data.for.survival), apply(index.survival.models,1,function(x)paste(x, collapse="-")))
)
for (model_idx in ncol(survival.model.output)){
model_info <- index.survival.models[model_idx,]
for (transform_idx in colnames(data.for.survival)){
model_imps <- NULL;
for (imputation_idx in 1:nrow(data.for.survival)){
data=data.table(data.for.survival[imputation_idx, transform_idx])
output= LinearSurvivalModel(data=data,
spvl_method=model_info$spvl_method,
interaction=model_info$interaction,
bins=model_info$bins,
return.modelobject = 1)
output_summary <- summary(output)$coefficients
model_imps[[imputation_idx]] <- output_summary
}
survival.model.output[transform_idx, model_idx] <- model_imps
}
}
model_idx
model_info
model_imps
transform_idx
imputation_idx
data
data.for.survival[imputation_idx,]
data.for.survival[imputation_idx,transform_idx]
####################################################################################################
## Author: Amelia Bertozzi-Villa
## Description: Find summary measures (coefficients, SE, AIC, Rubin error, RMSE[oos]) for all models tested
## Input:  main_dir: Directory in which imputed model data live
##
## Output:
##
## Run from within the "vectorize" folder!
####################################################################################################
rm(list=ls())
library(data.table)
library(ggplot2)
library(lme4)
library(reshape2)
library(Amelia)
source("LinearSurvivalModel.R")
source("rubin.method.R")
source("output.AIC.R")
source("summarize_models.r")
#automatically finds correct directory name so we can stop commenting and uncommenting lines
dir.exists <- function(d) {
de <- file.info(d)$isdir
ifelse(is.na(de), FALSE, de)
}
root_dir <- ifelse(dir.exists("/home/cselinger/"), "/home/cselinger/HIV-Cascade/merge/data/", "C:/Users/abertozz/Dropbox (IDM)/viral_load/cascade/data/")
main_dir <- ifelse(length(commandArgs())>2, commandArgs()[3], root_dir)
#load imputed data and indices for data transforms and survial models
print("loading imputed data")
load(paste0(main_dir, "imputed_survival_data.rdata"))
load(paste0(main_dir, "indexes.rdata"))
#run all models
print ("running survival models")
survival.model.output<-matrix(nrow=ncol(data.for.survival),
ncol=nrow(index.survival.models),
dimnames = list(colnames(data.for.survival), apply(index.survival.models,1,function(x)paste(x, collapse="-")))
)
for (model_idx in ncol(survival.model.output)){
model_info <- index.survival.models[model_idx,]
for (transform_idx in colnames(data.for.survival)){
model_imps <- NULL;
for (imputation_idx in 1:nrow(data.for.survival)){
data=data.table(data.for.survival[imputation_idx, transform_idx][[1]])
output= LinearSurvivalModel(data=data,
spvl_method=model_info$spvl_method,
interaction=model_info$interaction,
bins=model_info$bins,
return.modelobject = 1)
output_summary <- summary(output)$coefficients
model_imps[[imputation_idx]] <- output_summary
}
survival.model.output[transform_idx, model_idx] <- model_imps
}
}
data
data
model_info
model_info$spvl_method
model_info$interactin
model_info$interaction
output
summary(output)
data
is.list(output)
is.lm(output)
mode(output)
output
attributes(output)
output$coefficients
summary(output)
data
length(output)
outpu
output
output[1]
output[2]
names(output)
data
interaction <- 0
model_info
interaction <-1
spvl_method <- model_info$spvl_method
bins <- model_info$bins
bins<-unlist(bins)
#  data<-data.table(data)
#   print(paste0("type: ",typeof(data)))
#   print(paste0("class: ",class(data)))
###agebins for categorical variable
if(length(bins)>1){
data[,agebin:=cut(data$agesero, bins, include.lowest=TRUE)]
}
###arguments of function
binning<-ifelse(length(bins)>1,
paste0(" and age bins ", paste(bins,collapse=' ')),
' and continous age covariate')
print(paste0('SURVIVAL: ',"log normal survival with ",spvl_method,c(' without interaction',' with interaction')[interaction+1],binning))
if (interaction==1&length(bins)>1&length(levels(data$event_num))>1){formula <- paste0("observed_survival~  (agebin + ",spvl_method,")^2 + event_num")}
if (interaction==1&length(bins)>1&length(levels(data$event_num))==1){formula <- paste0("observed_survival~  (agebin + ",spvl_method,")^2")}
if (interaction==1&length(bins)==1&length(levels(data$event_num))>1){formula <- paste0("observed_survival~  (agesero + ",spvl_method,")^2 + event_num")}
if (interaction==1&length(bins)==1&length(levels(data$event_num))==1){formula <- paste0("observed_survival~  (agesero + ",spvl_method,")^2")}
if (interaction==0&length(bins)>1&length(levels(data$event_num))>1){formula <- paste0("observed_survival~  agebin + ",spvl_method," + event_num")}
if (interaction==0&length(bins)>1&length(levels(data$event_num))==1){formula <- paste0("observed_survival~  agebin + ",spvl_method)}
if (interaction==0&length(bins)==1&length(levels(data$event_num))>1){formula <- paste0("observed_survival~  agesero + ",spvl_method," + event_num")}
if (interaction==0&length(bins)==1&length(levels(data$event_num))==1){formula <- paste0("observed_survival~  agesero + ",spvl_method)}
###evaluate model
output <- lm(as.formula(formula), data=data)
output
summary(output)
formula
data
class(data)
mode(data)
ls()
data.for.survival
data[[1]]
length(data)
data
class(data)
data.for.survival
data.for.survival[1,1]
data.for.survival[1,1][[1]]
test <- data.for.survival[1,1][[1]]
class(test)
data <- copy(test)
output= LinearSurvivalModel(data=data,
spvl_method=model_info$spvl_method,
interaction=model_info$interaction,
bins=model_info$bins,
return.modelobject = 1)
output
summary(output)
data.for.survival
test <- data.for.survival[1,1]
class(test)
length(test)
data.for.survival[1,1]
data.for.survival[1,6]
test <- data.for.survival[1,1][[1]]
test
length(test)
output= LinearSurvivalModel(data=test,
spvl_method=model_info$spvl_method,
interaction=model_info$interaction,
bins=model_info$bins,
return.modelobject = 1)
output
summary(test)
data
length(data)
test
summary(output)
####################################################################################################
## Author: Amelia Bertozzi-Villa
## Description: Find summary measures (coefficients, SE, AIC, Rubin error, RMSE[oos]) for all models tested
## Input:  main_dir: Directory in which imputed model data live
##
## Output:
##
## Run from within the "vectorize" folder!
####################################################################################################
rm(list=ls())
library(data.table)
library(ggplot2)
library(lme4)
library(reshape2)
library(Amelia)
source("LinearSurvivalModel.R")
source("rubin.method.R")
source("output.AIC.R")
source("summarize_models.r")
#automatically finds correct directory name so we can stop commenting and uncommenting lines
dir.exists <- function(d) {
de <- file.info(d)$isdir
ifelse(is.na(de), FALSE, de)
}
root_dir <- ifelse(dir.exists("/home/cselinger/"), "/home/cselinger/HIV-Cascade/merge/data/", "C:/Users/abertozz/Dropbox (IDM)/viral_load/cascade/data/")
main_dir <- ifelse(length(commandArgs())>2, commandArgs()[3], root_dir)
#load imputed data and indices for data transforms and survial models
print("loading imputed data")
load(paste0(main_dir, "imputed_survival_data.rdata"))
load(paste0(main_dir, "indexes.rdata"))
#run all models
print ("running survival models")
# fill a matrix with model outputs: rows are data transforms, columns are model specifications, each entry is a list
# of length imputation_count with all the model outputs for that data transform and specification
survival.model.output<-matrix(nrow=ncol(data.for.survival),
ncol=nrow(index.survival.models),
dimnames = list(colnames(data.for.survival), apply(index.survival.models,1,function(x)paste(x, collapse="-")))
)
for (model_idx in ncol(survival.model.output)){
model_info <- index.survival.models[model_idx,]
for (transform_idx in colnames(data.for.survival)){
model_imps <- NULL;
for (imputation_idx in 1:nrow(data.for.survival)){
this_data=data.for.survival[imputation_idx, transform_idx][[1]]
output= LinearSurvivalModel(data=this_data,
spvl_method=model_info$spvl_method,
interaction=model_info$interaction,
bins=model_info$bins,
return.modelobject = 1)
output_summary <- summary(output)$coefficients
model_imps[[imputation_idx]] <- output_summary
}
survival.model.output[transform_idx, model_idx] <- model_imps
}
}
output
this_data
AIC(outptu)
AIC(output)
this_data
test <- lm(observed_survival~agesero, data=this_data)
test
summary(test)
q()
